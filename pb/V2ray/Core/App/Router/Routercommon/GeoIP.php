<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: app/router/routercommon/common.proto

namespace V2ray\Core\App\Router\Routercommon;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>v2ray.core.app.router.routercommon.GeoIP</code>
 */
class GeoIP extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string country_code = 1;</code>
     */
    protected $country_code = '';
    /**
     * Generated from protobuf field <code>repeated .v2ray.core.app.router.routercommon.CIDR cidr = 2;</code>
     */
    private $cidr;
    /**
     * Generated from protobuf field <code>bool inverse_match = 3;</code>
     */
    protected $inverse_match = false;
    /**
     * resource_hash instruct simplified config converter to load domain from geo file.
     *
     * Generated from protobuf field <code>bytes resource_hash = 4;</code>
     */
    protected $resource_hash = '';
    /**
     * Generated from protobuf field <code>string code = 5;</code>
     */
    protected $code = '';
    /**
     * Generated from protobuf field <code>string file_path = 68000 [(.v2ray.core.common.protoext.field_opt) = {</code>
     */
    protected $file_path = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $country_code
     *     @type array<\V2ray\Core\App\Router\Routercommon\CIDR>|\Google\Protobuf\Internal\RepeatedField $cidr
     *     @type bool $inverse_match
     *     @type string $resource_hash
     *           resource_hash instruct simplified config converter to load domain from geo file.
     *     @type string $code
     *     @type string $file_path
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\App\Router\Routercommon\Common::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string country_code = 1;</code>
     * @return string
     */
    public function getCountryCode()
    {
        return $this->country_code;
    }

    /**
     * Generated from protobuf field <code>string country_code = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCountryCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->country_code = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .v2ray.core.app.router.routercommon.CIDR cidr = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getCidr()
    {
        return $this->cidr;
    }

    /**
     * Generated from protobuf field <code>repeated .v2ray.core.app.router.routercommon.CIDR cidr = 2;</code>
     * @param array<\V2ray\Core\App\Router\Routercommon\CIDR>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setCidr($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \V2ray\Core\App\Router\Routercommon\CIDR::class);
        $this->cidr = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool inverse_match = 3;</code>
     * @return bool
     */
    public function getInverseMatch()
    {
        return $this->inverse_match;
    }

    /**
     * Generated from protobuf field <code>bool inverse_match = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setInverseMatch($var)
    {
        GPBUtil::checkBool($var);
        $this->inverse_match = $var;

        return $this;
    }

    /**
     * resource_hash instruct simplified config converter to load domain from geo file.
     *
     * Generated from protobuf field <code>bytes resource_hash = 4;</code>
     * @return string
     */
    public function getResourceHash()
    {
        return $this->resource_hash;
    }

    /**
     * resource_hash instruct simplified config converter to load domain from geo file.
     *
     * Generated from protobuf field <code>bytes resource_hash = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setResourceHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->resource_hash = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string code = 5;</code>
     * @return string
     */
    public function getCode()
    {
        return $this->code;
    }

    /**
     * Generated from protobuf field <code>string code = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->code = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string file_path = 68000 [(.v2ray.core.common.protoext.field_opt) = {</code>
     * @return string
     */
    public function getFilePath()
    {
        return $this->file_path;
    }

    /**
     * Generated from protobuf field <code>string file_path = 68000 [(.v2ray.core.common.protoext.field_opt) = {</code>
     * @param string $var
     * @return $this
     */
    public function setFilePath($var)
    {
        GPBUtil::checkString($var, True);
        $this->file_path = $var;

        return $this;
    }

}

