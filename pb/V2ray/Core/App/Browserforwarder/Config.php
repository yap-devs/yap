<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: app/browserforwarder/config.proto

namespace V2ray\Core\App\Browserforwarder;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Config is the settings for BrowserForwarder.
 *
 * Generated from protobuf message <code>v2ray.core.app.browserforwarder.Config</code>
 */
class Config extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string listen_addr = 1;</code>
     */
    protected $listen_addr = '';
    /**
     * Generated from protobuf field <code>int32 listen_port = 2;</code>
     */
    protected $listen_port = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $listen_addr
     *     @type int $listen_port
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\App\Browserforwarder\Config::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string listen_addr = 1;</code>
     * @return string
     */
    public function getListenAddr()
    {
        return $this->listen_addr;
    }

    /**
     * Generated from protobuf field <code>string listen_addr = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setListenAddr($var)
    {
        GPBUtil::checkString($var, True);
        $this->listen_addr = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 listen_port = 2;</code>
     * @return int
     */
    public function getListenPort()
    {
        return $this->listen_port;
    }

    /**
     * Generated from protobuf field <code>int32 listen_port = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setListenPort($var)
    {
        GPBUtil::checkInt32($var);
        $this->listen_port = $var;

        return $this;
    }

}

