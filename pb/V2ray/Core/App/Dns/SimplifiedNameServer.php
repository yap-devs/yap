<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: app/dns/config.proto

namespace V2ray\Core\App\Dns;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>v2ray.core.app.dns.SimplifiedNameServer</code>
 */
class SimplifiedNameServer extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.v2ray.core.common.net.Endpoint address = 1;</code>
     */
    protected $address = null;
    /**
     * Generated from protobuf field <code>string client_ip = 5;</code>
     */
    protected $client_ip = '';
    /**
     * Generated from protobuf field <code>string tag = 7;</code>
     */
    protected $tag = '';
    /**
     * Generated from protobuf field <code>repeated .v2ray.core.app.dns.SimplifiedNameServer.PriorityDomain prioritized_domain = 2;</code>
     */
    private $prioritized_domain;
    /**
     * Generated from protobuf field <code>repeated .v2ray.core.app.router.routercommon.GeoIP geoip = 3;</code>
     */
    private $geoip;
    /**
     * Generated from protobuf field <code>repeated .v2ray.core.app.dns.SimplifiedNameServer.OriginalRule original_rules = 4;</code>
     */
    private $original_rules;
    /**
     * Generated from protobuf field <code>.v2ray.core.app.dns.fakedns.FakeDnsPoolMulti fake_dns = 11;</code>
     */
    protected $fake_dns = null;
    /**
     * Deprecated. Use fallback_strategy.
     *
     * Generated from protobuf field <code>bool skipFallback = 6 [deprecated = true];</code>
     * @deprecated
     */
    protected $skipFallback = false;
    /**
     * Generated from protobuf field <code>optional .v2ray.core.app.dns.QueryStrategy query_strategy = 8;</code>
     */
    protected $query_strategy = null;
    /**
     * Generated from protobuf field <code>optional .v2ray.core.app.dns.CacheStrategy cache_strategy = 9;</code>
     */
    protected $cache_strategy = null;
    /**
     * Generated from protobuf field <code>optional .v2ray.core.app.dns.FallbackStrategy fallback_strategy = 10;</code>
     */
    protected $fallback_strategy = null;
    /**
     * Generated from protobuf field <code>repeated .v2ray.core.app.router.routercommon.GeoSite geo_domain = 68001;</code>
     */
    private $geo_domain;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \V2ray\Core\Common\Net\Endpoint $address
     *     @type string $client_ip
     *     @type string $tag
     *     @type array<\V2ray\Core\App\Dns\SimplifiedNameServer\PriorityDomain>|\Google\Protobuf\Internal\RepeatedField $prioritized_domain
     *     @type array<\V2ray\Core\App\Router\Routercommon\GeoIP>|\Google\Protobuf\Internal\RepeatedField $geoip
     *     @type array<\V2ray\Core\App\Dns\SimplifiedNameServer\OriginalRule>|\Google\Protobuf\Internal\RepeatedField $original_rules
     *     @type \V2ray\Core\App\Dns\Fakedns\FakeDnsPoolMulti $fake_dns
     *     @type bool $skipFallback
     *           Deprecated. Use fallback_strategy.
     *     @type int $query_strategy
     *     @type int $cache_strategy
     *     @type int $fallback_strategy
     *     @type array<\V2ray\Core\App\Router\Routercommon\GeoSite>|\Google\Protobuf\Internal\RepeatedField $geo_domain
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\App\Dns\Config::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.v2ray.core.common.net.Endpoint address = 1;</code>
     * @return \V2ray\Core\Common\Net\Endpoint|null
     */
    public function getAddress()
    {
        return $this->address;
    }

    public function hasAddress()
    {
        return isset($this->address);
    }

    public function clearAddress()
    {
        unset($this->address);
    }

    /**
     * Generated from protobuf field <code>.v2ray.core.common.net.Endpoint address = 1;</code>
     * @param \V2ray\Core\Common\Net\Endpoint $var
     * @return $this
     */
    public function setAddress($var)
    {
        GPBUtil::checkMessage($var, \V2ray\Core\Common\Net\Endpoint::class);
        $this->address = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string client_ip = 5;</code>
     * @return string
     */
    public function getClientIp()
    {
        return $this->client_ip;
    }

    /**
     * Generated from protobuf field <code>string client_ip = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setClientIp($var)
    {
        GPBUtil::checkString($var, True);
        $this->client_ip = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string tag = 7;</code>
     * @return string
     */
    public function getTag()
    {
        return $this->tag;
    }

    /**
     * Generated from protobuf field <code>string tag = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setTag($var)
    {
        GPBUtil::checkString($var, True);
        $this->tag = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .v2ray.core.app.dns.SimplifiedNameServer.PriorityDomain prioritized_domain = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPrioritizedDomain()
    {
        return $this->prioritized_domain;
    }

    /**
     * Generated from protobuf field <code>repeated .v2ray.core.app.dns.SimplifiedNameServer.PriorityDomain prioritized_domain = 2;</code>
     * @param array<\V2ray\Core\App\Dns\SimplifiedNameServer\PriorityDomain>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPrioritizedDomain($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \V2ray\Core\App\Dns\SimplifiedNameServer\PriorityDomain::class);
        $this->prioritized_domain = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .v2ray.core.app.router.routercommon.GeoIP geoip = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getGeoip()
    {
        return $this->geoip;
    }

    /**
     * Generated from protobuf field <code>repeated .v2ray.core.app.router.routercommon.GeoIP geoip = 3;</code>
     * @param array<\V2ray\Core\App\Router\Routercommon\GeoIP>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setGeoip($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \V2ray\Core\App\Router\Routercommon\GeoIP::class);
        $this->geoip = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .v2ray.core.app.dns.SimplifiedNameServer.OriginalRule original_rules = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getOriginalRules()
    {
        return $this->original_rules;
    }

    /**
     * Generated from protobuf field <code>repeated .v2ray.core.app.dns.SimplifiedNameServer.OriginalRule original_rules = 4;</code>
     * @param array<\V2ray\Core\App\Dns\SimplifiedNameServer\OriginalRule>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setOriginalRules($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \V2ray\Core\App\Dns\SimplifiedNameServer\OriginalRule::class);
        $this->original_rules = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.v2ray.core.app.dns.fakedns.FakeDnsPoolMulti fake_dns = 11;</code>
     * @return \V2ray\Core\App\Dns\Fakedns\FakeDnsPoolMulti|null
     */
    public function getFakeDns()
    {
        return $this->fake_dns;
    }

    public function hasFakeDns()
    {
        return isset($this->fake_dns);
    }

    public function clearFakeDns()
    {
        unset($this->fake_dns);
    }

    /**
     * Generated from protobuf field <code>.v2ray.core.app.dns.fakedns.FakeDnsPoolMulti fake_dns = 11;</code>
     * @param \V2ray\Core\App\Dns\Fakedns\FakeDnsPoolMulti $var
     * @return $this
     */
    public function setFakeDns($var)
    {
        GPBUtil::checkMessage($var, \V2ray\Core\App\Dns\Fakedns\FakeDnsPoolMulti::class);
        $this->fake_dns = $var;

        return $this;
    }

    /**
     * Deprecated. Use fallback_strategy.
     *
     * Generated from protobuf field <code>bool skipFallback = 6 [deprecated = true];</code>
     * @return bool
     * @deprecated
     */
    public function getSkipFallback()
    {
        @trigger_error('skipFallback is deprecated.', E_USER_DEPRECATED);
        return $this->skipFallback;
    }

    /**
     * Deprecated. Use fallback_strategy.
     *
     * Generated from protobuf field <code>bool skipFallback = 6 [deprecated = true];</code>
     * @param bool $var
     * @return $this
     * @deprecated
     */
    public function setSkipFallback($var)
    {
        @trigger_error('skipFallback is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkBool($var);
        $this->skipFallback = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .v2ray.core.app.dns.QueryStrategy query_strategy = 8;</code>
     * @return int
     */
    public function getQueryStrategy()
    {
        return isset($this->query_strategy) ? $this->query_strategy : 0;
    }

    public function hasQueryStrategy()
    {
        return isset($this->query_strategy);
    }

    public function clearQueryStrategy()
    {
        unset($this->query_strategy);
    }

    /**
     * Generated from protobuf field <code>optional .v2ray.core.app.dns.QueryStrategy query_strategy = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setQueryStrategy($var)
    {
        GPBUtil::checkEnum($var, \V2ray\Core\App\Dns\QueryStrategy::class);
        $this->query_strategy = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .v2ray.core.app.dns.CacheStrategy cache_strategy = 9;</code>
     * @return int
     */
    public function getCacheStrategy()
    {
        return isset($this->cache_strategy) ? $this->cache_strategy : 0;
    }

    public function hasCacheStrategy()
    {
        return isset($this->cache_strategy);
    }

    public function clearCacheStrategy()
    {
        unset($this->cache_strategy);
    }

    /**
     * Generated from protobuf field <code>optional .v2ray.core.app.dns.CacheStrategy cache_strategy = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setCacheStrategy($var)
    {
        GPBUtil::checkEnum($var, \V2ray\Core\App\Dns\CacheStrategy::class);
        $this->cache_strategy = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .v2ray.core.app.dns.FallbackStrategy fallback_strategy = 10;</code>
     * @return int
     */
    public function getFallbackStrategy()
    {
        return isset($this->fallback_strategy) ? $this->fallback_strategy : 0;
    }

    public function hasFallbackStrategy()
    {
        return isset($this->fallback_strategy);
    }

    public function clearFallbackStrategy()
    {
        unset($this->fallback_strategy);
    }

    /**
     * Generated from protobuf field <code>optional .v2ray.core.app.dns.FallbackStrategy fallback_strategy = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setFallbackStrategy($var)
    {
        GPBUtil::checkEnum($var, \V2ray\Core\App\Dns\FallbackStrategy::class);
        $this->fallback_strategy = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .v2ray.core.app.router.routercommon.GeoSite geo_domain = 68001;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getGeoDomain()
    {
        return $this->geo_domain;
    }

    /**
     * Generated from protobuf field <code>repeated .v2ray.core.app.router.routercommon.GeoSite geo_domain = 68001;</code>
     * @param array<\V2ray\Core\App\Router\Routercommon\GeoSite>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setGeoDomain($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \V2ray\Core\App\Router\Routercommon\GeoSite::class);
        $this->geo_domain = $arr;

        return $this;
    }

}

