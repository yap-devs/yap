<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: app/observatory/config.proto

namespace V2ray\Core\App\Observatory;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>v2ray.core.app.observatory.OutboundStatus</code>
 */
class OutboundStatus extends \Google\Protobuf\Internal\Message
{
    /**
     * \@Document Whether this outbound is usable
     *\@Restriction ReadOnlyForUser
     *
     * Generated from protobuf field <code>bool alive = 1;</code>
     */
    protected $alive = false;
    /**
     * \@Document The time for probe request to finish.
     *\@Type time.ms
     *\@Restriction ReadOnlyForUser
     *
     * Generated from protobuf field <code>int64 delay = 2;</code>
     */
    protected $delay = 0;
    /**
     * \@Document The last error caused this outbound failed to relay probe request
     *\@Restriction NotMachineReadable
     *
     * Generated from protobuf field <code>string last_error_reason = 3;</code>
     */
    protected $last_error_reason = '';
    /**
     * \@Document The outbound tag for this Server
     *\@Type id.outboundTag
     *
     * Generated from protobuf field <code>string outbound_tag = 4;</code>
     */
    protected $outbound_tag = '';
    /**
     * \@Document The time this outbound is known to be alive
     *\@Type id.outboundTag
     *
     * Generated from protobuf field <code>int64 last_seen_time = 5;</code>
     */
    protected $last_seen_time = 0;
    /**
     * \@Document The time this outbound is tried
     *\@Type id.outboundTag
     *
     * Generated from protobuf field <code>int64 last_try_time = 6;</code>
     */
    protected $last_try_time = 0;
    /**
     * Generated from protobuf field <code>.v2ray.core.app.observatory.HealthPingMeasurementResult health_ping = 7;</code>
     */
    protected $health_ping = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $alive
     *           \@Document Whether this outbound is usable
     *          \@Restriction ReadOnlyForUser
     *     @type int|string $delay
     *           \@Document The time for probe request to finish.
     *          \@Type time.ms
     *          \@Restriction ReadOnlyForUser
     *     @type string $last_error_reason
     *           \@Document The last error caused this outbound failed to relay probe request
     *          \@Restriction NotMachineReadable
     *     @type string $outbound_tag
     *           \@Document The outbound tag for this Server
     *          \@Type id.outboundTag
     *     @type int|string $last_seen_time
     *           \@Document The time this outbound is known to be alive
     *          \@Type id.outboundTag
     *     @type int|string $last_try_time
     *           \@Document The time this outbound is tried
     *          \@Type id.outboundTag
     *     @type \V2ray\Core\App\Observatory\HealthPingMeasurementResult $health_ping
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\App\Observatory\Config::initOnce();
        parent::__construct($data);
    }

    /**
     * \@Document Whether this outbound is usable
     *\@Restriction ReadOnlyForUser
     *
     * Generated from protobuf field <code>bool alive = 1;</code>
     * @return bool
     */
    public function getAlive()
    {
        return $this->alive;
    }

    /**
     * \@Document Whether this outbound is usable
     *\@Restriction ReadOnlyForUser
     *
     * Generated from protobuf field <code>bool alive = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setAlive($var)
    {
        GPBUtil::checkBool($var);
        $this->alive = $var;

        return $this;
    }

    /**
     * \@Document The time for probe request to finish.
     *\@Type time.ms
     *\@Restriction ReadOnlyForUser
     *
     * Generated from protobuf field <code>int64 delay = 2;</code>
     * @return int|string
     */
    public function getDelay()
    {
        return $this->delay;
    }

    /**
     * \@Document The time for probe request to finish.
     *\@Type time.ms
     *\@Restriction ReadOnlyForUser
     *
     * Generated from protobuf field <code>int64 delay = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDelay($var)
    {
        GPBUtil::checkInt64($var);
        $this->delay = $var;

        return $this;
    }

    /**
     * \@Document The last error caused this outbound failed to relay probe request
     *\@Restriction NotMachineReadable
     *
     * Generated from protobuf field <code>string last_error_reason = 3;</code>
     * @return string
     */
    public function getLastErrorReason()
    {
        return $this->last_error_reason;
    }

    /**
     * \@Document The last error caused this outbound failed to relay probe request
     *\@Restriction NotMachineReadable
     *
     * Generated from protobuf field <code>string last_error_reason = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setLastErrorReason($var)
    {
        GPBUtil::checkString($var, True);
        $this->last_error_reason = $var;

        return $this;
    }

    /**
     * \@Document The outbound tag for this Server
     *\@Type id.outboundTag
     *
     * Generated from protobuf field <code>string outbound_tag = 4;</code>
     * @return string
     */
    public function getOutboundTag()
    {
        return $this->outbound_tag;
    }

    /**
     * \@Document The outbound tag for this Server
     *\@Type id.outboundTag
     *
     * Generated from protobuf field <code>string outbound_tag = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setOutboundTag($var)
    {
        GPBUtil::checkString($var, True);
        $this->outbound_tag = $var;

        return $this;
    }

    /**
     * \@Document The time this outbound is known to be alive
     *\@Type id.outboundTag
     *
     * Generated from protobuf field <code>int64 last_seen_time = 5;</code>
     * @return int|string
     */
    public function getLastSeenTime()
    {
        return $this->last_seen_time;
    }

    /**
     * \@Document The time this outbound is known to be alive
     *\@Type id.outboundTag
     *
     * Generated from protobuf field <code>int64 last_seen_time = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setLastSeenTime($var)
    {
        GPBUtil::checkInt64($var);
        $this->last_seen_time = $var;

        return $this;
    }

    /**
     * \@Document The time this outbound is tried
     *\@Type id.outboundTag
     *
     * Generated from protobuf field <code>int64 last_try_time = 6;</code>
     * @return int|string
     */
    public function getLastTryTime()
    {
        return $this->last_try_time;
    }

    /**
     * \@Document The time this outbound is tried
     *\@Type id.outboundTag
     *
     * Generated from protobuf field <code>int64 last_try_time = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setLastTryTime($var)
    {
        GPBUtil::checkInt64($var);
        $this->last_try_time = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.v2ray.core.app.observatory.HealthPingMeasurementResult health_ping = 7;</code>
     * @return \V2ray\Core\App\Observatory\HealthPingMeasurementResult|null
     */
    public function getHealthPing()
    {
        return $this->health_ping;
    }

    public function hasHealthPing()
    {
        return isset($this->health_ping);
    }

    public function clearHealthPing()
    {
        unset($this->health_ping);
    }

    /**
     * Generated from protobuf field <code>.v2ray.core.app.observatory.HealthPingMeasurementResult health_ping = 7;</code>
     * @param \V2ray\Core\App\Observatory\HealthPingMeasurementResult $var
     * @return $this
     */
    public function setHealthPing($var)
    {
        GPBUtil::checkMessage($var, \V2ray\Core\App\Observatory\HealthPingMeasurementResult::class);
        $this->health_ping = $var;

        return $this;
    }

}

