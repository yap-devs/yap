<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: app/router/config.proto

namespace GPBMetadata\App\Router;

class Config
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        \GPBMetadata\Google\Protobuf\Any::initOnce();
        \GPBMetadata\Common\Net\Port::initOnce();
        \GPBMetadata\Common\Net\Network::initOnce();
        \GPBMetadata\Common\Protoext\Extensions::initOnce();
        \GPBMetadata\App\Router\Routercommon\Common::initOnce();
        $pool->internalAddGeneratedFile(
            "\x0A\x94\x15\x0A\x17app/router/config.proto\x12\x15v2ray.core.app.router\x1A\x15common/net/port.proto\x1A\x18common/net/network.proto\x1A common/protoext/extensions.proto\x1A\$app/router/routercommon/common.proto\"\xBC\x06\x0A\x0BRoutingRule\x12\x0D\x0A\x03tag\x18\x01 \x01(\x09H\x00\x12\x17\x0A\x0Dbalancing_tag\x18\x0C \x01(\x09H\x00\x12:\x0A\x06domain\x18\x02 \x03(\x0B2*.v2ray.core.app.router.routercommon.Domain\x12:\x0A\x04cidr\x18\x03 \x03(\x0B2(.v2ray.core.app.router.routercommon.CIDRB\x02\x18\x01\x128\x0A\x05geoip\x18\x0A \x03(\x0B2).v2ray.core.app.router.routercommon.GeoIP\x128\x0A\x0Aport_range\x18\x04 \x01(\x0B2 .v2ray.core.common.net.PortRangeB\x02\x18\x01\x122\x0A\x09port_list\x18\x0E \x01(\x0B2\x1F.v2ray.core.common.net.PortList\x12<\x0A\x0Cnetwork_list\x18\x05 \x01(\x0B2\".v2ray.core.common.net.NetworkListB\x02\x18\x01\x120\x0A\x08networks\x18\x0D \x03(\x0E2\x1E.v2ray.core.common.net.Network\x12A\x0A\x0Bsource_cidr\x18\x06 \x03(\x0B2(.v2ray.core.app.router.routercommon.CIDRB\x02\x18\x01\x12?\x0A\x0Csource_geoip\x18\x0B \x03(\x0B2).v2ray.core.app.router.routercommon.GeoIP\x129\x0A\x10source_port_list\x18\x10 \x01(\x0B2\x1F.v2ray.core.common.net.PortList\x12\x12\x0A\x0Auser_email\x18\x07 \x03(\x09\x12\x13\x0A\x0Binbound_tag\x18\x08 \x03(\x09\x12\x10\x0A\x08protocol\x18\x09 \x03(\x09\x12\x12\x0A\x0Aattributes\x18\x0F \x01(\x09\x12\x16\x0A\x0Edomain_matcher\x18\x11 \x01(\x09\x12A\x0A\x0Ageo_domain\x18\xA1\x93\x04 \x03(\x0B2+.v2ray.core.app.router.routercommon.GeoSiteB\x0C\x0A\x0Atarget_tag\"\x90\x01\x0A\x0DBalancingRule\x12\x0B\x0A\x03tag\x18\x01 \x01(\x09\x12\x19\x0A\x11outbound_selector\x18\x02 \x03(\x09\x12\x10\x0A\x08strategy\x18\x03 \x01(\x09\x12/\x0A\x11strategy_settings\x18\x04 \x01(\x0B2\x14.google.protobuf.Any\x12\x14\x0A\x0Cfallback_tag\x18\x05 \x01(\x09\">\x0A\x0EStrategyWeight\x12\x0E\x0A\x06regexp\x18\x01 \x01(\x08\x12\x0D\x0A\x05match\x18\x02 \x01(\x09\x12\x0D\x0A\x05value\x18\x03 \x01(\x02\"X\x0A\x14StrategyRandomConfig\x12\x14\x0A\x0Cobserver_tag\x18\x07 \x01(\x09\x12\x12\x0A\x0Aalive_only\x18\x08 \x01(\x08:\x16\x82\xB5\x18\x12\x0A\x08balancer\x12\x06random\"J\x0A\x17StrategyLeastPingConfig\x12\x14\x0A\x0Cobserver_tag\x18\x07 \x01(\x09:\x19\x82\xB5\x18\x15\x0A\x08balancer\x12\x09leastping\"\xC8\x01\x0A\x17StrategyLeastLoadConfig\x124\x0A\x05costs\x18\x02 \x03(\x0B2%.v2ray.core.app.router.StrategyWeight\x12\x11\x0A\x09baselines\x18\x03 \x03(\x03\x12\x10\x0A\x08expected\x18\x04 \x01(\x05\x12\x0E\x0A\x06maxRTT\x18\x05 \x01(\x03\x12\x11\x0A\x09tolerance\x18\x06 \x01(\x02\x12\x14\x0A\x0Cobserver_tag\x18\x07 \x01(\x09:\x19\x82\xB5\x18\x15\x0A\x08balancer\x12\x09leastload\"\xB8\x01\x0A\x06Config\x12>\x0A\x0Fdomain_strategy\x18\x01 \x01(\x0E2%.v2ray.core.app.router.DomainStrategy\x120\x0A\x04rule\x18\x02 \x03(\x0B2\".v2ray.core.app.router.RoutingRule\x12<\x0A\x0Ebalancing_rule\x18\x03 \x03(\x0B2\$.v2ray.core.app.router.BalancingRule\"\x91\x04\x0A\x15SimplifiedRoutingRule\x12\x0D\x0A\x03tag\x18\x01 \x01(\x09H\x00\x12\x17\x0A\x0Dbalancing_tag\x18\x0C \x01(\x09H\x00\x12:\x0A\x06domain\x18\x02 \x03(\x0B2*.v2ray.core.app.router.routercommon.Domain\x128\x0A\x05geoip\x18\x0A \x03(\x0B2).v2ray.core.app.router.routercommon.GeoIP\x12\x11\x0A\x09port_list\x18\x0E \x01(\x09\x124\x0A\x08networks\x18\x0D \x01(\x0B2\".v2ray.core.common.net.NetworkList\x12?\x0A\x0Csource_geoip\x18\x0B \x03(\x0B2).v2ray.core.app.router.routercommon.GeoIP\x12\x18\x0A\x10source_port_list\x18\x10 \x01(\x09\x12\x12\x0A\x0Auser_email\x18\x07 \x03(\x09\x12\x13\x0A\x0Binbound_tag\x18\x08 \x03(\x09\x12\x10\x0A\x08protocol\x18\x09 \x03(\x09\x12\x12\x0A\x0Aattributes\x18\x0F \x01(\x09\x12\x16\x0A\x0Edomain_matcher\x18\x11 \x01(\x09\x12A\x0A\x0Ageo_domain\x18\xA1\x93\x04 \x03(\x0B2+.v2ray.core.app.router.routercommon.GeoSiteB\x0C\x0A\x0Atarget_tag\"\xE3\x01\x0A\x10SimplifiedConfig\x12>\x0A\x0Fdomain_strategy\x18\x01 \x01(\x0E2%.v2ray.core.app.router.DomainStrategy\x12:\x0A\x04rule\x18\x02 \x03(\x0B2,.v2ray.core.app.router.SimplifiedRoutingRule\x12<\x0A\x0Ebalancing_rule\x18\x03 \x03(\x0B2\$.v2ray.core.app.router.BalancingRule:\x15\x82\xB5\x18\x11\x0A\x07service\x12\x06router*G\x0A\x0EDomainStrategy\x12\x08\x0A\x04AsIs\x10\x00\x12\x09\x0A\x05UseIp\x10\x01\x12\x10\x0A\x0CIpIfNonMatch\x10\x02\x12\x0E\x0A\x0AIpOnDemand\x10\x03B`\x0A\x19com.v2ray.core.app.routerP\x01Z)github.com/v2fly/v2ray-core/v5/app/router\xAA\x02\x15V2Ray.Core.App.Routerb\x06proto3"
        , true);

        static::$is_initialized = true;
    }
}

