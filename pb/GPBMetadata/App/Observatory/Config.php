<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: app/observatory/config.proto

namespace GPBMetadata\App\Observatory;

class Config
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        \GPBMetadata\Common\Protoext\Extensions::initOnce();
        $pool->internalAddGeneratedFile(
            "\x0A\xBD\x06\x0A\x1Capp/observatory/config.proto\x12\x1Av2ray.core.app.observatory\"O\x0A\x11ObservationResult\x12:\x0A\x06status\x18\x01 \x03(\x0B2*.v2ray.core.app.observatory.OutboundStatus\"v\x0A\x1BHealthPingMeasurementResult\x12\x0B\x0A\x03all\x18\x01 \x01(\x03\x12\x0C\x0A\x04fail\x18\x02 \x01(\x03\x12\x11\x0A\x09deviation\x18\x03 \x01(\x03\x12\x0F\x0A\x07average\x18\x04 \x01(\x03\x12\x0B\x0A\x03max\x18\x05 \x01(\x03\x12\x0B\x0A\x03min\x18\x06 \x01(\x03\"\xDC\x01\x0A\x0EOutboundStatus\x12\x0D\x0A\x05alive\x18\x01 \x01(\x08\x12\x0D\x0A\x05delay\x18\x02 \x01(\x03\x12\x19\x0A\x11last_error_reason\x18\x03 \x01(\x09\x12\x14\x0A\x0Coutbound_tag\x18\x04 \x01(\x09\x12\x16\x0A\x0Elast_seen_time\x18\x05 \x01(\x03\x12\x15\x0A\x0Dlast_try_time\x18\x06 \x01(\x03\x12L\x0A\x0Bhealth_ping\x18\x07 \x01(\x0B27.v2ray.core.app.observatory.HealthPingMeasurementResult\"F\x0A\x0BProbeResult\x12\x0D\x0A\x05alive\x18\x01 \x01(\x08\x12\x0D\x0A\x05delay\x18\x02 \x01(\x03\x12\x19\x0A\x11last_error_reason\x18\x03 \x01(\x09\"#\x0A\x09Intensity\x12\x16\x0A\x0Eprobe_interval\x18\x01 \x01(\x0D\"s\x0A\x06Config\x12\x18\x0A\x10subject_selector\x18\x02 \x03(\x09\x12\x11\x0A\x09probe_url\x18\x03 \x01(\x09\x12\x16\x0A\x0Eprobe_interval\x18\x04 \x01(\x03:\$\x82\xB5\x18 \x0A\x07service\x12\x15backgroundObservatoryBo\x0A\x1Ecom.v2ray.core.app.observatoryP\x01Z.github.com/v2fly/v2ray-core/v5/app/observatory\xAA\x02\x1AV2Ray.Core.App.Observatoryb\x06proto3"
        , true);

        static::$is_initialized = true;
    }
}

