<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: app/dns/config.proto

namespace GPBMetadata\App\Dns;

class Config
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        \GPBMetadata\Common\Net\Address::initOnce();
        \GPBMetadata\Common\Net\Destination::initOnce();
        \GPBMetadata\App\Router\Routercommon\Common::initOnce();
        \GPBMetadata\App\Dns\Fakedns\Fakedns::initOnce();
        \GPBMetadata\Common\Protoext\Extensions::initOnce();
        $pool->internalAddGeneratedFile(
            "\x0A\x90\x1D\x0A\x14app/dns/config.proto\x12\x12v2ray.core.app.dns\x1A\x1Ccommon/net/destination.proto\x1A\$app/router/routercommon/common.proto\x1A\x1Dapp/dns/fakedns/fakedns.proto\x1A common/protoext/extensions.proto\"\x88\x06\x0A\x0ANameServer\x120\x0A\x07address\x18\x01 \x01(\x0B2\x1F.v2ray.core.common.net.Endpoint\x12\x11\x0A\x09client_ip\x18\x05 \x01(\x0C\x12\x0B\x0A\x03tag\x18\x07 \x01(\x09\x12I\x0A\x12prioritized_domain\x18\x02 \x03(\x0B2-.v2ray.core.app.dns.NameServer.PriorityDomain\x128\x0A\x05geoip\x18\x03 \x03(\x0B2).v2ray.core.app.router.routercommon.GeoIP\x12C\x0A\x0Eoriginal_rules\x18\x04 \x03(\x0B2+.v2ray.core.app.dns.NameServer.OriginalRule\x12>\x0A\x08fake_dns\x18\x0B \x01(\x0B2,.v2ray.core.app.dns.fakedns.FakeDnsPoolMulti\x12\x18\x0A\x0CskipFallback\x18\x06 \x01(\x08B\x02\x18\x01\x12>\x0A\x0Equery_strategy\x18\x08 \x01(\x0E2!.v2ray.core.app.dns.QueryStrategyH\x00\x88\x01\x01\x12>\x0A\x0Ecache_strategy\x18\x09 \x01(\x0E2!.v2ray.core.app.dns.CacheStrategyH\x01\x88\x01\x01\x12D\x0A\x11fallback_strategy\x18\x0A \x01(\x0E2\$.v2ray.core.app.dns.FallbackStrategyH\x02\x88\x01\x01\x1AV\x0A\x0EPriorityDomain\x124\x0A\x04type\x18\x01 \x01(\x0E2&.v2ray.core.app.dns.DomainMatchingType\x12\x0E\x0A\x06domain\x18\x02 \x01(\x09\x1A*\x0A\x0COriginalRule\x12\x0C\x0A\x04rule\x18\x01 \x01(\x09\x12\x0C\x0A\x04size\x18\x02 \x01(\x0DB\x11\x0A\x0F_query_strategyB\x11\x0A\x0F_cache_strategyB\x14\x0A\x12_fallback_strategy\"w\x0A\x0BHostMapping\x124\x0A\x04type\x18\x01 \x01(\x0E2&.v2ray.core.app.dns.DomainMatchingType\x12\x0E\x0A\x06domain\x18\x02 \x01(\x09\x12\x0A\x0A\x02ip\x18\x03 \x03(\x0C\x12\x16\x0A\x0Eproxied_domain\x18\x04 \x01(\x09\"\xC9\x05\x0A\x06Config\x128\x0A\x0BNameServers\x18\x01 \x03(\x0B2\x1F.v2ray.core.common.net.EndpointB\x02\x18\x01\x123\x0A\x0Bname_server\x18\x05 \x03(\x0B2\x1E.v2ray.core.app.dns.NameServer\x128\x0A\x05Hosts\x18\x02 \x03(\x0B2%.v2ray.core.app.dns.Config.HostsEntryB\x02\x18\x01\x12\x11\x0A\x09client_ip\x18\x03 \x01(\x0C\x125\x0A\x0Cstatic_hosts\x18\x04 \x03(\x0B2\x1F.v2ray.core.app.dns.HostMapping\x12>\x0A\x08fake_dns\x18\x10 \x01(\x0B2,.v2ray.core.app.dns.fakedns.FakeDnsPoolMulti\x12\x0B\x0A\x03tag\x18\x06 \x01(\x09\x12\x16\x0A\x0Edomain_matcher\x18\x0F \x01(\x09\x12\x18\x0A\x0CdisableCache\x18\x08 \x01(\x08B\x02\x18\x01\x12\x1B\x0A\x0FdisableFallback\x18\x0A \x01(\x08B\x02\x18\x01\x12\"\x0A\x16disableFallbackIfMatch\x18\x0B \x01(\x08B\x02\x18\x01\x129\x0A\x0Equery_strategy\x18\x09 \x01(\x0E2!.v2ray.core.app.dns.QueryStrategy\x129\x0A\x0Ecache_strategy\x18\x0C \x01(\x0E2!.v2ray.core.app.dns.CacheStrategy\x12?\x0A\x11fallback_strategy\x18\x0D \x01(\x0E2\$.v2ray.core.app.dns.FallbackStrategy\x1AO\x0A\x0AHostsEntry\x12\x0B\x0A\x03key\x18\x01 \x01(\x09\x120\x0A\x05value\x18\x02 \x01(\x0B2!.v2ray.core.common.net.IPOrDomain:\x028\x01J\x04\x08\x07\x10\x08\"\xC2\x04\x0A\x10SimplifiedConfig\x12=\x0A\x0Bname_server\x18\x05 \x03(\x0B2(.v2ray.core.app.dns.SimplifiedNameServer\x12\x11\x0A\x09client_ip\x18\x03 \x01(\x09\x12?\x0A\x0Cstatic_hosts\x18\x04 \x03(\x0B2).v2ray.core.app.dns.SimplifiedHostMapping\x12>\x0A\x08fake_dns\x18\x10 \x01(\x0B2,.v2ray.core.app.dns.fakedns.FakeDnsPoolMulti\x12\x0B\x0A\x03tag\x18\x06 \x01(\x09\x12\x16\x0A\x0Edomain_matcher\x18\x0F \x01(\x09\x12\x18\x0A\x0CdisableCache\x18\x08 \x01(\x08B\x02\x18\x01\x12\x1B\x0A\x0FdisableFallback\x18\x0A \x01(\x08B\x02\x18\x01\x12\"\x0A\x16disableFallbackIfMatch\x18\x0B \x01(\x08B\x02\x18\x01\x129\x0A\x0Equery_strategy\x18\x09 \x01(\x0E2!.v2ray.core.app.dns.QueryStrategy\x129\x0A\x0Ecache_strategy\x18\x0C \x01(\x0E2!.v2ray.core.app.dns.CacheStrategy\x12?\x0A\x11fallback_strategy\x18\x0D \x01(\x0E2\$.v2ray.core.app.dns.FallbackStrategy:\x12\x82\xB5\x18\x0E\x0A\x07service\x12\x03dnsJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03J\x04\x08\x07\x10\x08\"\x81\x01\x0A\x15SimplifiedHostMapping\x124\x0A\x04type\x18\x01 \x01(\x0E2&.v2ray.core.app.dns.DomainMatchingType\x12\x0E\x0A\x06domain\x18\x02 \x01(\x09\x12\x0A\x0A\x02ip\x18\x03 \x03(\x09\x12\x16\x0A\x0Eproxied_domain\x18\x04 \x01(\x09\"\xE9\x06\x0A\x14SimplifiedNameServer\x120\x0A\x07address\x18\x01 \x01(\x0B2\x1F.v2ray.core.common.net.Endpoint\x12\x11\x0A\x09client_ip\x18\x05 \x01(\x09\x12\x0B\x0A\x03tag\x18\x07 \x01(\x09\x12S\x0A\x12prioritized_domain\x18\x02 \x03(\x0B27.v2ray.core.app.dns.SimplifiedNameServer.PriorityDomain\x128\x0A\x05geoip\x18\x03 \x03(\x0B2).v2ray.core.app.router.routercommon.GeoIP\x12M\x0A\x0Eoriginal_rules\x18\x04 \x03(\x0B25.v2ray.core.app.dns.SimplifiedNameServer.OriginalRule\x12>\x0A\x08fake_dns\x18\x0B \x01(\x0B2,.v2ray.core.app.dns.fakedns.FakeDnsPoolMulti\x12\x18\x0A\x0CskipFallback\x18\x06 \x01(\x08B\x02\x18\x01\x12>\x0A\x0Equery_strategy\x18\x08 \x01(\x0E2!.v2ray.core.app.dns.QueryStrategyH\x00\x88\x01\x01\x12>\x0A\x0Ecache_strategy\x18\x09 \x01(\x0E2!.v2ray.core.app.dns.CacheStrategyH\x01\x88\x01\x01\x12D\x0A\x11fallback_strategy\x18\x0A \x01(\x0E2\$.v2ray.core.app.dns.FallbackStrategyH\x02\x88\x01\x01\x12A\x0A\x0Ageo_domain\x18\xA1\x93\x04 \x03(\x0B2+.v2ray.core.app.router.routercommon.GeoSite\x1AV\x0A\x0EPriorityDomain\x124\x0A\x04type\x18\x01 \x01(\x0E2&.v2ray.core.app.dns.DomainMatchingType\x12\x0E\x0A\x06domain\x18\x02 \x01(\x09\x1A*\x0A\x0COriginalRule\x12\x0C\x0A\x04rule\x18\x01 \x01(\x09\x12\x0C\x0A\x04size\x18\x02 \x01(\x0DB\x11\x0A\x0F_query_strategyB\x11\x0A\x0F_cache_strategyB\x14\x0A\x12_fallback_strategy*E\x0A\x12DomainMatchingType\x12\x08\x0A\x04Full\x10\x00\x12\x0D\x0A\x09Subdomain\x10\x01\x12\x0B\x0A\x07Keyword\x10\x02\x12\x09\x0A\x05Regex\x10\x03*5\x0A\x0DQueryStrategy\x12\x0A\x0A\x06USE_IP\x10\x00\x12\x0B\x0A\x07USE_IP4\x10\x01\x12\x0B\x0A\x07USE_IP6\x10\x02*4\x0A\x0DCacheStrategy\x12\x10\x0A\x0CCacheEnabled\x10\x00\x12\x11\x0A\x0DCacheDisabled\x10\x01*E\x0A\x10FallbackStrategy\x12\x0B\x0A\x07Enabled\x10\x00\x12\x0C\x0A\x08Disabled\x10\x01\x12\x16\x0A\x12DisabledIfAnyMatch\x10\x02BW\x0A\x16com.v2ray.core.app.dnsP\x01Z&github.com/v2fly/v2ray-core/v5/app/dns\xAA\x02\x12V2Ray.Core.App.Dnsb\x06proto3"
        , true);

        static::$is_initialized = true;
    }
}

